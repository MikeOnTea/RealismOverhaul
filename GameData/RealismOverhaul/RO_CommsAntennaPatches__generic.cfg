// values by Gordon Dry
// tinker with it if you know better values and then commit it
//
// these patches apply after the dedicated patches, which are BEFORE[zzzRealismOverhaul]

// for parts that got ModuleDataTransmitter but no antennaPower (yes, they exist)
@PART[*]:HAS[@MODULE[ModuleDataTransmitter]:HAS[~antennaPower[>0]]]:NEEDS[RealismOverhaul,!RemoteTech]:FOR[zzzRealismOverhaul]
{
    @MODULE[ModuleDataTransmitter]
    {
        @antennaPower = 100000
    }
}

// when it was a RELAY we assume it's a dish for now
@PART[*]:HAS[@MODULE[ModuleDataTransmitter]:HAS[#antennaType[RELAY]],!MODULE[ModuleConfigurableAntenna]]:NEEDS[RealismOverhaul,!RemoteTech]:FOR[zzzRealismOverhaul]
{
    MODULE
    {
        name = ModuleConfigurableAntenna
        diameter = 1
        isScalable = false
    }
}

// when it was a DIRECT without ModuleCommand we assume it's a dedicated omni antenna with higher gain than built-in omni antennas
@PART[*]:HAS[@MODULE[ModuleDataTransmitter]:HAS[!MODULE[ModuleCommand],#antennaType[DIRECT]],!MODULE[ModuleConfigurableAntenna]]:NEEDS[RealismOverhaul,!RemoteTech]:FOR[zzzRealismOverhaul]
{
    MODULE
    {
        name = ModuleConfigurableAntenna
        referenceGain = #$/MODULE[ModuleDataTransmitter]/antennaPower$
        @referenceGain != 0.5
        @referenceGain != 0.5
        @referenceGain /= 50
        tempmass = #$/mass$
        @tempmass != 0.5
        @tempmass != 0.5
        @referenceGain *= #$tempmass$
        @referenceGain ^= :(.\d\d)\d+$:$1: // cut after two decimal places
        isScalable = false
    }
}

// when it was a DIRECT with ModuleCommand we assume it's a built-in omni antenna with lower gain than dedicated omni antennas
@PART[*]:HAS[@MODULE[ModuleDataTransmitter]:HAS[@MODULE[ModuleCommand],#antennaType[DIRECT]],!MODULE[ModuleConfigurableAntenna]]:NEEDS[RealismOverhaul,!RemoteTech]:FOR[zzzRealismOverhaul]
{
    MODULE
    {
        name = ModuleConfigurableAntenna
        referenceGain = #$/MODULE[ModuleDataTransmitter]/antennaPower$
        @referenceGain != 0.5
        @referenceGain != 0.5
        @referenceGain /= 150
        tempmass = #$/mass$
        @tempmass != 0.5
        @tempmass != 0.5
        @referenceGain *= #$tempmass$
        @referenceGain ^= :(.\d\d)\d+$:$1: // cut after two decimal places
        isScalable = false
    }
}

// when it was an INTERNAL we assume it's a (built-in) low gain telemetry antenna
@PART[*]:HAS[@MODULE[ModuleDataTransmitter]:HAS[#antennaType[INTERNAL]],!MODULE[ModuleConfigurableAntenna]]:NEEDS[RealismOverhaul,!RemoteTech]:FOR[zzzRealismOverhaul]
{
    MODULE
    {
        name = ModuleConfigurableAntenna
        referenceGain = #$/MODULE[ModuleDataTransmitter]/antennaPower$
        @referenceGain != 0.5
        @referenceGain != 0.5
        @referenceGain /= 150
        tempmass = #$/mass$
        @tempmass != 0.5
        @tempmass != 0.5
        @referenceGain *= #$tempmass$
        @referenceGain ^= :(.\d\d)\d+$:$1: // cut after two decimal places
        isScalable = false
    }
}

// when it's a ModuleAvionics/ModuleCommand without an antenna right now we give it a (built-in) low gain telemetry antenna
@PART[*]:HAS[!MODULE[ModuleDataTransmitter],!MODULE[ModuleConfigurableAntenna],@MODULE[ModuleAvionics],@MODULE[ModuleCommand]]:NEEDS[RealismOverhaul,!RemoteTech]:FOR[zzzRealismOverhaul]
{
    MODULE
    {
        name = ModuleConfigurableAntenna
        referenceGain = 0.12
        tempmass = #$/mass$
        @tempmass != 0.5
        @tempmass != 0.5
        @referenceGain *= #$tempmass$
        @referenceGain ^= :(.\d\d)\d+$:$1: // cut after two decimal places
        isScalable = false
    }
}

// if the referenceGain is below 0.01 we change it to 0.01 (highpass-filter)
@PART[*]:HAS[@MODULE[ModuleConfigurableAntenna]:HAS[#referenceGain[<0.01]],@MODULE[ModuleDataTransmitter]]:NEEDS[RealismOverhaul,!RemoteTech]:AFTER[zzzRealismOverhaul]
{
    @MODULE[ModuleConfigurableAntenna]
    {
        @referenceGain = 0.01
    }
}

// if the referenceGain is above 4 we change it to 4.0 (lowpass-filter)
@PART[*]:HAS[@MODULE[ModuleConfigurableAntenna]:HAS[#referenceGain[>4]],@MODULE[ModuleDataTransmitter]]:NEEDS[RealismOverhaul,!RemoteTech]:AFTER[zzzRealismOverhaul]
{
    @MODULE[ModuleConfigurableAntenna]
    {
        @referenceGain = 4.0
    }
}

// for any part that got ModuleConfigurableAntenna now and still got ModuleDataTransmitter we remove ModuleDataTransmitter and also remove the temp value
@PART[*]:HAS[@MODULE[ModuleDataTransmitter],@MODULE[ModuleConfigurableAntenna]]:NEEDS[RealismOverhaul,!RemoteTech]:AFTER[zzzRealismOverhaul]
{
    !MODULE[ModuleDataTransmitter],*{}

    @MODULE[ModuleConfigurableAntenna]
    {
        !tempmass = delete
    }
}
